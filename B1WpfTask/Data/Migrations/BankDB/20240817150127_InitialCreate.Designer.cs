// <auto-generated />
using System;
using B1WPFTask.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace B1WPFTask.Migrations.BankDB
{
    [DbContext(typeof(BankDBContext))]
    [Migration("20240817150127_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("B1WPFTask.Models.BankAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClassId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("InputBalanceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<Guid>("OutputBalanceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TurnoverId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.HasIndex("InputBalanceId");

                    b.HasIndex("OutputBalanceId");

                    b.HasIndex("TurnoverId");

                    b.ToTable("BankAccounts");
                });

            modelBuilder.Entity("B1WPFTask.Models.BankAccountClass", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("InputFileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InputFileId");

                    b.ToTable("BankAccountClasses");
                });

            modelBuilder.Entity("B1WPFTask.Models.InputBalance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Active")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Passive")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("InputBalances");
                });

            modelBuilder.Entity("B1WPFTask.Models.InputFile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("InputFiles");
                });

            modelBuilder.Entity("B1WPFTask.Models.OutputBalance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Active")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Passive")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("OutputBalances");
                });

            modelBuilder.Entity("B1WPFTask.Models.Turnover", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Credit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Debit")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Turnovers");
                });

            modelBuilder.Entity("B1WPFTask.Models.BankAccount", b =>
                {
                    b.HasOne("B1WPFTask.Models.BankAccountClass", "Class")
                        .WithMany("BankAccounts")
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("B1WPFTask.Models.InputBalance", "InputBalance")
                        .WithMany()
                        .HasForeignKey("InputBalanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("B1WPFTask.Models.OutputBalance", "OutputBalance")
                        .WithMany()
                        .HasForeignKey("OutputBalanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("B1WPFTask.Models.Turnover", "Turnover")
                        .WithMany()
                        .HasForeignKey("TurnoverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Class");

                    b.Navigation("InputBalance");

                    b.Navigation("OutputBalance");

                    b.Navigation("Turnover");
                });

            modelBuilder.Entity("B1WPFTask.Models.BankAccountClass", b =>
                {
                    b.HasOne("B1WPFTask.Models.InputFile", null)
                        .WithMany("AccountClasses")
                        .HasForeignKey("InputFileId");
                });

            modelBuilder.Entity("B1WPFTask.Models.BankAccountClass", b =>
                {
                    b.Navigation("BankAccounts");
                });

            modelBuilder.Entity("B1WPFTask.Models.InputFile", b =>
                {
                    b.Navigation("AccountClasses");
                });
#pragma warning restore 612, 618
        }
    }
}
