// <auto-generated />
using System;
using B1WPFTask.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace B1WPFTask.Migrations
{
    [DbContext(typeof(RandomRowDBContext))]
    [Migration("20240817132307_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("B1WPFTask.Models.RandomRow", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("LatinString")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PositiveDouble")
                        .HasColumnType("float");

                    b.Property<int>("PositiveInt")
                        .HasColumnType("int");

                    b.Property<string>("RussianString")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RandomRows");
                });
#pragma warning restore 612, 618
        }
    }
}
